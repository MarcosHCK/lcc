-- Copyright 2021-2025 MarcosHCK
-- This file is part of lcc.
--
-- lcc is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- lcc is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with lcc.  If not, see <http://www.gnu.org/licenses/>.
--
algorithm ('lr')
generator ('python')

prolog ('simple.prolog.py')
epilog ('simple.epilog.py')

ident = token ()
number = token ()

G = E
E = (T + (literal '-' * '+') + E)                       / fragment ('simple.translate.py')
E = T
T = (F + (literal '*' * '/' * '%') + T)                 / fragment ('simple.translate.py')
T = F
F = (ident * number)                                    / fragment ('simple.immediate.py')
F = P
F = (ident + P)                                         / fragment ('simple.invoke.py')
P = ('(' + E + ')')                                     / fragment ('simple.depar.py')
